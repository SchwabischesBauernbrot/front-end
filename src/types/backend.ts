/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
  "/test-profile": {
    get: operations["AppController_getProfile"];
  };
  "/test-profile-jwt": {
    get: operations["AppController_getProfileJwt"];
  };
  "/character/home": {
    get: operations["CharacterController_getCharactersForHome"];
  };
  "/character": {
    post: operations["CharacterController_createCharacter"];
  };
  "/character/{id}": {
    patch: operations["CharacterController_updateCharacter"];
  };
  "/profile/{id}": {
    get: operations["ProfileController_getProfile"];
  };
  "/profile/{id}/characters": {
    get: operations["ProfileController_getProfileCharacters"];
  };
  "/profile/{mine}": {
    post: operations["ProfileController_updateProfile"];
  };
}

export type webhooks = Record<string, never>;

export interface components {
  schemas: {
    Tag: {
      id: number;
      name: string;
      description: string;
      slug: string;
      created_at: string;
    };
    CharacterView: {
      id: string;
      name: string;
      avatar: string;
      description: string;
      created_at: string;
      is_nsfw: boolean;
      creator_id: string;
      creator_name: string;
      tags: components["schemas"]["Tag"];
    };
    CharacterDto: {
      avatar: string;
      name: string;
      personality: string;
      scenario: string;
      description: string;
      example_dialogs: string;
      first_message: string;
      is_nsfw: boolean;
      is_public: boolean;
    };
    ProfileResponse: {
      id: string;
      about_me: string;
      avatar: string;
      name: string;
      profile: string;
      user_name: string;
    };
    ProfileUpdateDto: {
      about_me: string;
      avatar: string;
      name: string;
      profile: string;
      user_name: string;
    };
  };
  responses: never;
  parameters: never;
  requestBodies: never;
  headers: never;
  pathItems: never;
}

export type external = Record<string, never>;

export interface operations {
  AppController_getProfile: {
    responses: {
      200: never;
    };
  };
  AppController_getProfileJwt: {
    responses: {
      200: never;
    };
  };
  CharacterController_getCharactersForHome: {
    responses: {
      default: {
        content: {
          "application/json": components["schemas"]["CharacterView"];
        };
      };
    };
  };
  CharacterController_createCharacter: {
    requestBody: {
      content: {
        "application/json": components["schemas"]["CharacterDto"];
      };
    };
    responses: {
      201: never;
    };
  };
  CharacterController_updateCharacter: {
    parameters: {
      path: {
        id: string;
      };
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["CharacterDto"];
      };
    };
    responses: {
      200: never;
    };
  };
  ProfileController_getProfile: {
    parameters: {
      path: {
        id: string;
      };
    };
    responses: {
      default: {
        content: {
          "application/json": components["schemas"]["ProfileResponse"];
        };
      };
    };
  };
  ProfileController_getProfileCharacters: {
    parameters: {
      path: {
        id: string;
      };
    };
    responses: {
      default: {
        content: {
          "application/json": components["schemas"]["CharacterView"];
        };
      };
    };
  };
  ProfileController_updateProfile: {
    requestBody: {
      content: {
        "application/json": components["schemas"]["ProfileUpdateDto"];
      };
    };
    responses: {
      201: never;
    };
  };
}
